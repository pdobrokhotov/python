"""
Django settings for learning_log project.
Generated by 'django-admin startproject' using Django 4.1.2.
For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
=========================================================================
             Using Bootstrap to Style Learning Log
=========================================================================
Bootstrap is basically a large collection of styling tools. It also has 
a number of templates you can apply to your project to create a particular
overall style. If you're just starting out, it's much easier to use these 
templates than it is to use individual styling tools. To see the templates
Bootstrap offers, go to the Getting Started section at
http://getbootstrap.com/
Then scroll down to the Examples heading, and look for the Navbars in action
section. We'll use the Static top navbar template, which provides a simple 
top navigation bar, a page header, and a container for the content of the page.
"""
from pathlib import Path
#====================================================================
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# My settings. This is needed for @login_required decorator 
# in file = [learning_logs/views.py] (see page 447)
# so as Django knew where to find the login page/ After that
# when an unauthenticated user requests a page protected by the
# [login_required] decorator, Django will send the user to the URL 
# defined by LOGIN_URL in settings.py.
LOGIN_URL = '/users/login/'
#===================================================================
# Settings for django-bootstrap3. First instal bootstrap3 as shown below:
# > (ll_env) D:\My Documents\python\Projects\Django>pip install django-bootstrap3
# We need django-bootstrap3 to include jQuery, a JavaScript library that
# enables some of the interactive elements that the Bootstrap template provides.
# This code spares us from having to download jQuery and place it in the
# correct location manually.
BOOTSTRAP3 = {
'include_jquery': True,
}
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u_7f^h3x_r(+^8c*%-c87nw9o65yg&+zx*k2(2nv0d1d6vm%-f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # My apps
    'learning_logs',
    'users',
    # Third party apps. First instal bootstrap3 as shown below:
    # > (ll_env) D:\My Documents\python\Projects\Django>pip install django-bootstrap3
    'bootstrap3',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'learning_log.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'learning_log.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
